@using ReliefWeb.Models
@model List<ReliefResult>
@{
	ViewBag.Title = "Relief";
}

<h2>Result</h2>
<style>
	td, th {
		padding: 3px 5px;
	}
</style>
@if (Model != null && Model.Count > 0)
{
	foreach (ReliefResult item in Model)
	{
		<span style="width: 250px; display: inline-block">
			Calculation time: @item.Duration
			<br />
			Algorithm: @item.Name
		</span>
	}
	<br />

	int ind = -1;
	foreach (ReliefResult item in Model)
	{
		ind++;
		<table border="1" style="display: inline-table; min-width: 250px">
			<thead>
				<tr>
					<th>Column</th>
					<th style="text-align: center">Score</th>
				</tr>
			</thead>
			<tbody>
				@for (int i = 0; i < item.SortedScores.Count; i++)
				{
					if (i == 0)
					{
						<tr>
							<td>@item.SortedScores[i].Key</td>
							<td style="text-align: center"><b>@item.SortedScores[i].Value.ToString("N5")</b></td>
						</tr>
					}
					else
					{

						<tr>
							<td>@item.SortedScores[i].Key</td>
							<td style="text-align: center">@item.SortedScores[i].Value.ToString("N5")</td>
						</tr>
					}
				}
				@if (item.RemovedCount != null)
				{
					<tr>
						<td colspan="2">+@item.RemovedCount.Value removed columns</td>
					</tr>
				}
				@if (item.Clusters != null)
				{
					<tr>
						<td style="width: 200px">
							@for (int j = 0; j < item.Sillhoutte.ClusterPairs.Count; j++)
							{
								@Html.Partial("BarChart", item.Sillhoutte.ClusterPairs[j], new ViewDataDictionary() { { "id", "chart_sil_" + ind + "_" + j }, { "color", item.Sillhoutte.ClusterColors[j] } })
							}
						</td>

						<td style="width: 200px">
							@for (int j = 0; j < item.SillhoutteAll.ClusterPairs.Count; j++)
							{
								@Html.Partial("BarChart", item.SillhoutteAll.ClusterPairs[j], new ViewDataDictionary() { { "id", "chart_sil_all_" + ind + "_" + j }, { "color", item.SillhoutteAll.ClusterColors[j] } })
							}
						</td>
					</tr>
					for (int j = 0; j < item.Graphs.Count; j++)
					{
						<tr>
							<td>
								@Html.Partial("Chart", item.Graphs[j], new ViewDataDictionary() { { "id", "chart_" + ind + "_" + j } })
							</td>
							<td>
								@Html.Partial("Chart", item.GraphsAll[j], new ViewDataDictionary() { { "id", "chart_" + ind + "_" + j + "_o" } })
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	}
	<br />
	<br />
	<button onclick="location.href = '/Home/Export'">Get PDF</button>
}