@using ReliefWeb.Models
@model List<ReliefResult>
@{
	ViewBag.Title = "Relief";
}

<h2>Result</h2>
<style>
	td, th {
		padding: 3px 5px;
	}
</style>
@if (Model != null && Model.Count > 0)
{
	foreach (ReliefResult item in Model)
	{
		<span style="width: 250px; display: inline-block">
			Calculation time: @item.Duration
			<br />
			Algorithm: @item.Name
		</span>
	}
	<br />

	int ind = -1;
	foreach (ReliefResult item in Model)
	{
		ind++;
		<table border="1" style="display: inline-table; min-width: 250px">
			<thead>
				<tr>
					<th>Column</th>
					<th>Score</th>
				</tr>
			</thead>
			<tbody>
				@for (int i = 0; i < item.SortedScores.Count; i++)
				{
					if (i == 0)
					{
						<tr>
							<td>@item.SortedScores[i].Key</td>
							<td><b>@item.SortedScores[i].Value.ToString("N5")</b></td>
						</tr>
					}
					else
					{

						<tr>
							<td>@item.SortedScores[i].Key</td>
							<td>@item.SortedScores[i].Value.ToString("N5")</td>
						</tr>
					}
				}
				@if (item.RemovedCount != null)
				{
					<tr>
						<td colspan="2">+@item.RemovedCount.Value removed columns</td>
					</tr>
				}
				@if (item.Clusters != null)
				{
					<tr>
						@{
							var xAxis = new List<int>();
							for (int j = 0; j < item.Clusters.Rows.Count; j++)
							{
								xAxis.Add(j + 1);
							}
							var chart = new Chart(width: 200, height: 200, theme: ChartTheme.Vanilla)
						 .AddTitle("Sillhoutte index")
						 .AddSeries("Default",
									xValue: xAxis,
									yValues: item.Sillhoutte)
							.ToWebImage();
							<td colspan="2">
								<img src="@string.Format("data:image/jpeg;base64,{0}",Convert.ToBase64String(chart.GetBytes()))" />
							</td>
						}
					</tr>
					for (int j = 0; j < item.Graphs.Count; j++)
					{
						<tr>
							<td colspan="2">
								@Html.Partial("Chart", item.Graphs[j], new ViewDataDictionary() { { "Counter", ind }, { "Counter2", j } })
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	}
}